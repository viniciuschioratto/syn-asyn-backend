services:
  user-db-service:
    container_name: user-db-service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17.2
    container_name: user-db-postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: user
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d user" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: ["postgres", "-c", "wal_level=logical"]
  pgadmin:
    image: dpage/pgadmin4:8.14.0
    container_name: user-db-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./servers.json:/pgadmin4/servers.json
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: Broker-1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:29091
      KAFKA_CLUSTERS_1_NAME: Broker-2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka-broker-2:29092
      KAFKA_CLUSTERS_2_NAME: Broker-3
      KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: kafka-broker-3:29093
      LOGGING_LEVEL_ROOT: error
      LOGGING_LEVEL_COM_PROVECTUS: error
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.1
    restart: unless-stopped
    ports:
      - '32181:32181'
      - '2888:2888'
      - '3888:3888'
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 32181
      interval: 10s
      timeout: 10s
      retries: 3
  kafka-broker-1:
    container_name: kafka-broker-1
    image: confluentinc/cp-kafka:7.4.1
    restart: unless-stopped
    ports:
      - '9091:9091'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-1:29091,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: nc -vz localhost 9091
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
  kafka-broker-2:
    container_name: kafka-broker-2
    image: confluentinc/cp-kafka:7.4.1
    restart: unless-stopped
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-2:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: nc -vz localhost 9092
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
  kafka-broker-3:
    container_name: kafka-broker-3
    image: confluentinc/cp-kafka:7.4.1
    restart: unless-stopped
    ports:
      - '9093:9093'
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-3:29093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: nc -vz localhost 9093
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
  kafka-connector:
    image: debezium/connect:3.0.0.Final
    container_name: postgres-connector
    ports:
      - '9090:8083'
    depends_on:
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      - BOOTSTRAP_SERVERS=kafka-broker-1:29091,kafka-broker-2:29092,kafka-broker-3:29093
      - GROUP_ID=pg
      - CONFIG_STORAGE_TOPIC=pg_connect_configs
      - OFFSET_STORAGE_TOPIC=pg_connect_offsets
      - STATUS_STORAGE_TOPIC=pg_connect_statuses
      - LOG_LEVEL=ERROR

  # TODO - Add Schema Registry
  #schema-registry:
  #  container_name: schema-registry
  #  image: confluentinc/cp-schema-registry:7.4.1
  #  environment:
  #    - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:32181
  #    - SCHEMA_REGISTRY_HOST_NAME=schema-registry
  #    - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8083
  #  ports:
  #      - '8083:8081'
  #connector-sender:
  #  container_name: connector-sender
  #  image: confluentinc/cp-kafka-connect:7.4.1
  #  volumes:
  #    - ./config:/config
  #  depends_on:
  #    - kafka-connector
  #  command:
  #    - bash
  #    - -c
  #    - |
  #      echo "Wainting for kafka connect to start..."
  #      until [[ "$$(curl -s -o /dev/null -w %{http_code} localhost:9090/connectors)" -eq 200 ]]; do
  #        sleep 1
  #      done
  #      echo -e "Sending connector"
  #      curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" localhost:9090/connectors/ -d @/config/pg_kafka_connector_config.json
